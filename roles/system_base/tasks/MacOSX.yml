---
- name: Get base defaults config
  command: defaults -currentHost read -g
  register: currentHost_defaults
  changed_when: currentHost_defaults.rc != 0

- name: Remap CapsLock to Escape (internal keyboard)
  when: not "    \"com.apple.keyboard.modifiermapping.1452-632-0\" =     (\n                {\n            HIDKeyboardModifierMappingDst = 30064771113;\n            HIDKeyboardModifierMappingSrc = 30064771129;\n        }\n    );" in currentHost_defaults.stdout
  osx_defaults:
    host: currentHost
    key: com.apple.keyboard.modifiermapping.1452-632-0
    type: array
    array_add: true
    value:
      - '<dict><key>HIDKeyboardModifierMappingDst</key><integer>30064771113</integer><key>HIDKeyboardModifierMappingSrc</key><integer>30064771129</integer></dict>'

- name: Remap CapsLock to Escape (wireless keyboard)
  when: not "    \"com.apple.keyboard.modifiermapping.alt_handler_id-50\" =     (\n                {\n            HIDKeyboardModifierMappingDst = 30064771113;\n            HIDKeyboardModifierMappingSrc = 30064771129;\n        }\n    );" in currentHost_defaults.stdout
  osx_defaults:
    host: currentHost
    key: com.apple.keyboard.modifiermapping.alt_handler_id-50
    type: array
    array_add: true
    value:
      - '<dict><key>HIDKeyboardModifierMappingDst</key><integer>30064771113</integer><key>HIDKeyboardModifierMappingSrc</key><integer>30064771129</integer></dict>'

- name: Remap CapsLock to Escape (wireless keyboard)
  when: not "    \"com.apple.keyboard.modifiermapping.alt_handler_id-83\" =     (\n                {\n            HIDKeyboardModifierMappingDst = 30064771113;\n            HIDKeyboardModifierMappingSrc = 30064771129;\n        }\n    );" in currentHost_defaults.stdout
  osx_defaults:
    host: currentHost
    key: com.apple.keyboard.modifiermapping.alt_handler_id-83
    type: array
    array_add: true
    value:
      - '<dict><key>HIDKeyboardModifierMappingDst</key><integer>30064771113</integer><key>HIDKeyboardModifierMappingSrc</key><integer>30064771129</integer></dict>'

# see:
# * https://wilsonmar.github.io/mac-osx-config-dotfiles/
- name: Make macOS more pretty and usable
  osx_defaults:
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    domain: "{{ item.domain }}"
  with_items:
    - {domain: NSGlobalDomain, key: AppleInterfaceTheme, type: string, value: Dark}  # dark theme
    - {domain: NSGlobalDomain, key: AppleKeyboardUIMode, type: integer, value: 3}  # enable tabs in dialogs
    - {domain: NSGlobalDomain, key: com.apple.trackpad.scaling, type: integer, value: 2}  # faster trackpad
    - {domain: NSGlobalDomain, key: PMPrintingExpandedStateForPrint, type: boolean, value: true}  # show extended print panel
    - {domain: NSGlobalDomain, key: com.apple.mouse.tapBehavior, type: integer, value: 1}  # tap to click
    # - {domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: Clicking, type: boolean, value: true}  # tap to click
    - {domain: com.apple.screensaver, key: askForPassword, type: integer, value: 1}  # require password from screensaver
    - {domain: com.apple.screensaver, key: askForPasswordDelay, type: float, value: 0}  # require password immediately
    - {domain: com.apple.finder, key: FXPreferredViewStyle, type: string, value: Nlsv}  # Finder defaults to list view
    - {domain: com.apple.finder, key: CreateDesktop, type: boolean, value: false}  # don't show anything on the desktop
    - {domain: com.apple.finder, key: NewWindowTarget, type: string, value: PfHm}  # show home folder in new Finder windows
    - {domain: com.apple.finder, key: NewWindowTargetPath, type: string, value: 'file:///Users/thegcat'}  # show home folder in new Finder windows
    - {domain: com.apple.dock, key: persistent-apps, type: array, value: []}  # remove default Apps from the Dock
    - {domain: com.apple.dock, key: tilesize, type: float, value: 60}  # set size of Dock icons
    - {domain: com.apple.dock, key: showhidden, type: boolean, value: true}  # hidden Apps are translucent in the Dock
    - {domain: com.apple.dock, key: expose-animation-duration, type: float, value: 0.1}  # speed up Exposé animations
    - {domain: com.apple.dock, key: expose-group-by-app, type: boolean, value: true}  # group windows by App in Exposé
    - {domain: com.apple.dock, key: autohide, type: boolean, value: true}  # autohide the Dock
    - {domain: com.apple.dock, key: autohide-delay, type: float, value: 0}  # faster Dock autohide
    - {domain: com.apple.dock, key: autohide-time-modifier, type: float, value: 0.5}  # faster Dock autohide
    - {domain: com.apple.dock, key: autohide-fullscreen-delayed, type: boolean, value: false}  # disable delay for showing Dock in fullscreen
    - {domain: com.apple.mail, key: DisableInlineAttachmentViewing, type: boolean, value: true}  # don't show attachments inline in Mail.app
    - {domain: com.apple.mail, key: AddressesIncludeNameOnPasteboard, type: boolean, value: false}  # don't include name with addresses copied from Mail
    - {domain: com.apple.Safari, key: IncludeInternalDebugMenu, type: boolean, value: true}  # show Safari debug menu
    - {domain: com.apple.Safari, key: IncludeDevelopMenu, type: boolean, value: true}  # show Safari debug menu
    - {domain: com.apple.Safari, key: WebKitDeveloperExtrasEnabledPreferenceKey, type: boolean, value: true}  # show Safari debug menu
    - {domain: com.apple.Safari, key: FindOnPageMatchesWordStartsOnly, type: boolean, value: false}  # switch Safari search banner to "contains"
    - {domain: com.apple.Safari, key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled, type: boolean, value: true}  # show Safari debug menu
    - {domain: NSGlobalDomain, key: WebKitDeveloperExtras, type: boolean, value: true}  # show Webkit debug menu
    - {domain: NSGlobalDomain, key: NSNavPanelExpandedStateForSaveMode, type: boolean, value: true}  # show extended save panel
    - {domain: NSGlobalDomain, key: NSNavPanelExpandedStateForSaveMode2, type: boolean, value: true}  # show extended save panel
    - {domain: NSGlobalDomain, key: NSDocumentSaveNewDocumentsToCloud, type: boolean, value: false}  # save to local disk by default
    - {domain: com.apple.desktopservices, key: DSDontWriteNetworkStores, type: boolean, value: true}  # don't create .DS_Store on network volumes
    - {domain: com.apple.desktopservices, key: DSDontWriteUSBStores, type: boolean, value: true}  # don't create .DS_Store on USB volumes
    - {domain: com.googlecode.iterm2, key: PromptOnQuit, type: boolean, value: false}  # don't ask for confirmation on quitting iTerm2
    - {domain: com.google.Chrome, key: DisablePrintPreview, type: boolean, value: true}  # use system print dialog in Chrome
    - {domain: com.google.Chrome.canary, key: DisablePrintPreview, type: boolean, value: true}  # use system print dialog in Chrome Canary
    - {domain: com.tapbots.TweetbotMac, key: OpenURLsDirectly, type: boolean, value: true}  # bypass t.co
    - {domain: com.apple.ImageCapture, key: disableHotPlug, type: boolean, value: true}  # don't open ImageCapture when camera plugged in
    - {domain: NSGlobalDomain, key: AppleFontSmoothing, type: integer, value: 2}  # enable subpixel font rendering on non-Apple LCDs
    - {domain: com.apple.screencapture, key: location, type: string, value: '/Users/thegcat/Downloads'}  # change screenshots to be saved to ~/Downloads
    - {domain: com.apple.print.PrintingPrefs, key: 'Quit When Finished', type: boolean, value: true}  # quit printer app once jobs are complete
    - {domain: com.apple.SoftwareUpdate, key: ScheduleFrequency, type: integer, value: 1}  # check for Mac App Store updates daily

- name: Enable firewall
  become: true
  become_method: sudo
  tags: ['bootstrap']
  command: /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
  register: enable_firewall
  changed_when: enable_firewall.rc != 0

- name: Install CLI Apps
  homebrew: name={{ item }} state=present
  with_items:
    - ansible
    - bat
    - curl
    - htop-osx
    - httpie
    - jq
    - lsd
    - lftp
    - mas
    - mmv
    - mobile-shell
    - openssh
    - p7zip
    - parallel
    - prettyping
    - ripgrep
    - sshuttle
    - tree
    - yt-dlp

- name: Add additional taps to homebrew
  homebrew_tap: name={{ item }}
  with_items:
    - homebrew/cask-drivers
    - homebrew/cask-fonts
    - homebrew/cask-versions

- name: Install GUI Apps
  homebrew_cask: name={{ item }}
  with_items:
    - 1password6
    - air-video-server-hd
    - airbuddy
    - apache-directory-studio
    - bartender
    # - caldigit-docking-utility # not M1 compatible yet
    # - caldigit-thunderbolt-charging # not M1 compatible yet
    - controlplane
    - cyberduck
    - element
    - eloston-chromium
    - firefox
    - google-chrome
    - gpg-suite
    - grandperspective
    - hammerspoon
    - iina
    - libreoffice
    - little-snitch
    - maccy
    - mactex-no-gui
    - mumble
    - netnewswire
    # - nextcloud # not M1 compatible yet
    - onyx
    - paparazzi
    - pg-commander
    - qlmarkdown
    # - qlvideo # not M1 compatible yet
    - rectangle
    - rocket-chat
    - sequel-ace
    - signal
    - skype
    - slack
    - textmate
    - textual
    - the-unarchiver
    - thingsmacsandboxhelper
    - tunnelblick
    - vlc
    - webcatalog
    - whatsapp
    - vmware-fusion

- name: Install fonts
  homebrew_cask: name={{ item }}
  with_items:
    - font-hack-nerd-font
    - font-fira-code-nerd-font

- name: List installed App Store Apps
  command: mas list
  register: mas_list
  changed_when: false

- name: Install App Store Apps
  command: mas install {{ item }}
  with_items:
    - 1384080005  # Tweetbot 3
    - 904280696  # Things 3
    - 409183694  # Keynote
    - 409201541  # Pages
    - 409203825  # Numbers
    - 1365531024  # 1blocker
    - 545519333  # Amazon Prime Video
    - 1591051659  # Screegle
    - 1591303229  # Vinegar
  when: "'{{ item }}' not in mas_list.stdout"

- name: Check if any App Store Apps are outdated
  command: mas outdated
  register: mas_outdated
  changed_when: false

- name: Upgrade all App Store Apps
  command: mas upgrade
  when: mas_outdated.stdout != ""
