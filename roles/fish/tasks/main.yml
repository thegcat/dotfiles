---
- name: Install fish and dependencies
  include: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: Get fish executable
  command: which fish
  check_mode: false
  register: fish_executable

- name: Enable using fish as login shell
  lineinfile:
    path: /etc/shells
    line: "{{ fish_executable.stdout }}"
    insertafter: EOF
  become: true

- name: Make fish the login shell
  shell: "chsh -s {{ fish_executable.stdout }}"
  when: lookup('env', 'SHELL') != fish_executable.stdout

- name: Get Oh-My-Fish
  git:
    repo: https://github.com/oh-my-fish/oh-my-fish
    dest: ~/Code/thegcat/oh-my-fish
    depth: 1
  register: omf_git

- name: Create required directories
  file:
    path: ~/.config/fish/functions
    state: directory

- name: Configure fish
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: config.fish, dest: ~/.config/fish/config.fish }
    - { src: functions_fish_user_key_bindings.fish, dest: ~/.config/fish/functions/fish_user_key_bindings.fish }
    - { src: home-localbinpath.fish, dest: ~/.config/fish/conf.d/home-localbinpath.fish }

- name: Configure fish
  template:
    src: "{{ item.src }}.j2"
    dest: "{{ item.dest }}"
  with_items:
    - { src: theme.fish, dest: ~/.config/fish/conf.d/theme.fish }

- name: Install Oh-My-Fish
  command: ~/Code/thegcat/oh-my-fish/bin/install --offline --noninteractive --yes
  when: omf_git.changed

- name: Install some Oh-My-Fish plugins
  shell: omf install "{{ item }}"
  args:
    executable: "{{ fish_executable.stdout }}"
  with_items:
    - direnv
